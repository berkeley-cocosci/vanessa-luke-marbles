
################################################################################
# table of contents, unordered

M6_GC = []
M6_all5050 = []
M6_allReg = []
M1_ins_blue_counts = [] # flipped input_p and output_p when 0:orange
M1_outs_blue_counts = []
M1_ins_m1_counts = [] # majority marble counts - ps taken from raw data file unaltered
M1_outs_m1_counts = []


################################################################################

# 6M GC final64   # count of m0 for bags: (1,2,3,4,5,6)
# input counts were same for all: (0,1,2,3,4,5)
M6_GC = ((0, 0, 1, 3, 1, 9),
 (4, 5, 4, 1, 6, 7),
 (0, 0, 0, 0, 10, 10),
 (5, 6, 7, 6, 6, 5),
 (0, 1, 0, 0, 7, 5),
 (0, 10, 0, 0, 0, 0),
 (0, 0, 10, 1, 1, 6),
 (0, 2, 1, 2, 1, 2),
 (2, 4, 6, 5, 3, 4),
 (4, 4, 4, 3, 4, 6),
 (0, 0, 0, 0, 9, 10),
 (0, 10, 0, 2, 0, 1),
 (0, 0, 2, 2, 0, 2),
 (0, 0, 0, 9, 2, 1),
 (0, 1, 2, 6, 1, 3),
 (0, 0, 0, 8, 10, 6),
 (0, 0, 0, 0, 7, 6),
 (0, 8, 2, 1, 1, 3),
 (1, 1, 4, 5, 5, 5),
 (0, 0, 0, 3, 0, 10),
 (0, 1, 4, 2, 4, 4),
 (8, 4, 2, 1, 8, 5),
 (7, 7, 5, 6, 7, 6),
 (4, 5, 2, 6, 4, 5),
 (0, 0, 10, 0, 7, 0),
 (2, 3, 3, 4, 3, 5),
 (0, 0, 0, 1, 5, 3),
 (0, 0, 2, 3, 1, 1),
 (1, 0, 2, 2, 4, 8),
 (0, 0, 0, 5, 0, 2),
 (0, 0, 4, 4, 5, 2),
 (0, 0, 0, 0, 10, 5),
 (3, 2, 3, 2, 8, 4),
 (0, 0, 0, 3, 3, 5),
 (0, 1, 2, 2, 4, 7),
 (0, 0, 1, 3, 2, 8),
 (2, 1, 2, 1, 1, 4),
 (0, 0, 0, 0, 0, 10),
 (0, 0, 0, 0, 10, 0),
 (0, 0, 1, 1, 10, 10),
 (1, 2, 0, 2, 2, 4),
 (0, 7, 5, 5, 2, 7),
 (2, 5, 5, 2, 7, 4),
 (0, 0, 0, 10, 9, 10),
 (1, 8, 7, 4, 4, 5),
 (2, 8, 4, 4, 7, 6),
 (0, 1, 0, 0, 8, 8),
 (0, 0, 0, 3, 10, 10),
 (5, 7, 6, 5, 6, 3),
 (1, 10, 0, 0, 10, 0),
 (0, 0, 0, 3, 10, 4),
 (0, 2, 4, 0, 1, 5),
 (3, 5, 6, 4, 4, 5),
 (0, 0, 1, 3, 0, 9),
 (0, 0, 0, 0, 0, 10),
 (4, 5, 2, 2, 3, 6),
 (0, 0, 2, 2, 3, 8),
 (1, 1, 0, 2, 2, 0),
 (0, 0, 6, 0, 1, 0),
 (3, 4, 3, 5, 5, 7),
 (0, 0, 10, 0, 0, 0),
 (3, 3, 5, 5, 4, 6),
 (7, 5, 1, 3, 4, 5),
 (0, 0, 4, 3, 3, 5))


# 6M all5050 final32
# input counts were same for all: (5,5,5,5,5,5)
M6_all5050 = ((0, 8, 8, 9, 3, 2),
 (3, 6, 1, 7, 9, 10),
 (6, 10, 9, 0, 1, 8),
 (7, 0, 8, 1, 1, 9),
 (6, 6, 4, 4, 2, 4),
 (0, 10, 8, 0, 0, 10),
 (2, 7, 1, 3, 5, 4),
 (4, 8, 4, 5, 6, 7),
 (0, 10, 10, 9, 10, 10),
 (6, 6, 3, 1, 8, 7),
 (1, 0, 0, 3, 2, 3),
 (7, 8, 6, 2, 3, 3),
 (10, 10, 10, 10, 0, 10),
 (10, 3, 0, 10, 0, 10),
 (4, 6, 5, 7, 2, 9),
 (4, 5, 4, 4, 3, 6),
 (5, 5, 4, 6, 5, 7),
 (2, 7, 3, 8, 4, 8),
 (7, 7, 5, 4, 4, 3),
 (8, 5, 4, 4, 8, 7),
 (6, 4, 7, 4, 4, 4),
 (3, 8, 4, 8, 9, 6),
 (6, 4, 3, 5, 4, 6),
 (6, 10, 0, 1, 6, 3),
 (10, 9, 5, 4, 0, 4),
 (3, 7, 3, 6, 6, 6),
 (1, 10, 6, 10, 2, 8),
 (2, 6, 6, 5, 8, 3),
 (5, 6, 6, 4, 4, 8),
 (4, 7, 7, 5, 3, 8),
 (2, 10, 9, 10, 6, 6),
 (5, 5, 5, 5, 5, 5))
 
# 6M allReg final32
# input counts were same for all: (0,0,0,0,0,0)
M6_allReg = ((0, 0, 1, 0, 0, 0),
 (0, 0, 0, 0, 0, 0),
 (0, 0, 0, 0, 0, 0),
 (0, 0, 0, 0, 0, 0),
 (0, 0, 0, 0, 0, 0),
 (0, 0, 0, 0, 0, 0),
 (0, 0, 0, 0, 0, 0),
 (0, 0, 0, 0, 0, 0),
 (2, 7, 5, 0, 6, 3),
 (0, 0, 0, 0, 0, 0),
 (0, 2, 0, 0, 0, 0),
 (2, 4, 4, 3, 5, 6),
 (6, 0, 0, 0, 0, 2),
 (0, 0, 0, 0, 0, 0),
 (0, 0, 0, 0, 0, 0),
 (0, 0, 0, 0, 0, 0),
 (0, 0, 0, 0, 0, 0),
 (3, 4, 0, 8, 6, 9),
 (0, 0, 0, 0, 0, 0),
 (0, 0, 0, 0, 0, 0),
 (10, 10, 10, 9, 1, 5),
 (0, 0, 0, 0, 0, 0),
 (0, 0, 0, 0, 0, 0),
 (0, 0, 0, 0, 0, 0),
 (0, 0, 0, 0, 0, 0),
 (1, 2, 2, 3, 1, 3),
 (5, 8, 5, 4, 4, 5),
 (0, 0, 0, 0, 0, 0),
 (0, 0, 0, 0, 0, 0),
 (0, 0, 0, 1, 0, 0),
 (0, 0, 0, 0, 0, 0),
 (0, 0, 0, 0, 0, 0))
 

# 6M_ins & 6M_outs
# extracted with the file: "6M counts extractor.r"
# uses first in pair counts (first in pair = blue,brown,black,red,olive,purple in 6M)
M6_ins_marble1_counts = (4,9,10,5,2,3,9,10,5,4,7,2,5,9,4,0,8,7,5,0,9,7,4,2,8,5,6,9,0,7,2,9,7,5,0,4,10,8,5,6,9,7,6,3,0,9,5,2,1,6,8,0,5,7,0,6,7,8,5,9,9,7,10,5,4,2,2,0,1,7,5,4,6,5,10,1,2,3,2,4,10,5,7,1,8,10,6,7,1,5,7,9,5,8,4,0,9,5,2,3,6,10,3,0,9,5,6,8,8,4,9,7,0,5,8,5,6,10,3,1,3,2,6,1,10,5,4,0,2,5,7,1,10,1,2,7,6,5,1,4,8,5,7,0,7,1,8,5,6,0,7,8,4,5,1,10,7,6,1,0,5,8,6,5,8,3,1,10,1,5,4,2,0,3,3,5,9,0,6,8,1,3,5,0,8,4,1,3,10,8,5,4,6,9,10,7,5,2,1,10,8,4,5,7,3,10,5,1,2,6,1,2,5,4,10,3,7,9,2,6,10,5,7,1,10,5,8,4,6,7,0,8,5,9,0,4,5,7,1,8,6,7,0,5,2,1,8,1,6,10,3,5,2,10,6,5,3,1,9,5,0,6,3,8,3,2,1,5,10,6,1,2,10,3,5,6,2,6,0,5,3,9,8,5,7,4,0,1,4,2,10,9,3,5,7,4,2,5,10,1,3,4,0,8,9,5,5,7,10,4,1,2,9,5,0,3,4,8,5,2,1,0,4,7,7,8,5,1,0,6,10,4,2,9,7,5,7,5,6,2,1,10,4,10,2,5,3,9,5,3,8,1,4,0,8,5,10,4,7,1,6,9,8,10,5,3,4,2,1,5,7,10,7,5,0,8,4,1,7,2,6,9,0,5)
M6_outs_marble1_counts = (1,10,10,9,1,3,5,6,7,6,9,4,10,10,10,0,10,10,5,5,4,4,6,7,10,5,3,9,0,10,0,0,10,0,0,0,10,0,6,9,10,9,9,2,0,8,2,1,4,7,4,2,4,5,4,6,7,6,6,6,10,10,10,10,9,0,0,0,10,8,1,0,10,2,10,0,2,2,0,2,10,1,1,0,8,10,9,4,1,3,2,10,6,10,10,0,10,6,0,0,3,10,1,0,2,3,9,8,6,5,9,5,1,5,10,10,10,10,3,0,2,4,6,1,10,4,8,8,2,5,9,4,3,7,5,4,3,6,5,4,8,5,4,4,10,0,0,0,3,0,6,7,3,5,3,8,9,5,0,0,3,10,9,1,8,3,0,10,0,8,4,2,1,2,5,2,10,0,10,10,0,4,2,0,6,5,0,0,10,10,5,10,2,8,7,8,4,3,0,10,10,3,5,7,2,10,7,1,2,6,0,1,8,2,10,3,9,9,2,9,8,4,10,0,10,10,10,0,0,10,0,10,0,10,0,10,10,9,0,9,8,8,1,4,0,2,5,7,8,10,5,7,5,8,3,4,2,5,10,10,0,1,10,10,4,7,8,5,9,6,8,4,8,4,6,3,0,2,0,8,0,9,10,10,7,10,0,0,6,6,5,3,5,3,10,10,0,0,9,10,3,10,0,10,10,4,5,10,10,1,2,4,5,5,3,4,4,4,9,1,0,0,0,7,10,10,10,0,0,10,6,3,2,5,8,6,8,8,7,2,0,10,2,9,0,0,2,9,0,0,4,0,1,0,7,7,7,5,5,4,10,10,0,10,0,0,4,5,3,6,5,7,7,5,7,9,4,5,7,4,7,10,0,5)

# 1M_ins & 1m_outs
# extracted with the file: "single marbles data counts extractor.r"
# uses first in pair counts (first in pair = blue in 1M)
M1_ins_blue_counts = (5,5,7,7,7,7,5,5,7,7,5,7,5,5,5,7,5,7,7,5,7,5,7,7,7,7,5,7,6,6,6,6,6,6,6,6,6,8,8,8,8,8,6,6,8,8,6,6,8,6,8,8,8,9,9,9,8,6,6,9,9,8,9,9,9,9,9,5,9,9,5,9,5,5,8,9,9,8,8,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,3,3,5,3,3,3,5,3,3,3,3,3,3,3,5,5,5,3,5,5,5,5,5,3,5,5,5,5,3,4,4,4,4,4,4,4,4,4,2,2,2,2,2,2,2,2,2,4,2,4,5,1,4,1,1,1,1,5,1,1,2,2,1,1,1,4,1,3,4,1,2,1,4,2,1,2,4,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
M1_outs_blue_counts = (5,4,5,8,7,5,5,5,6,7,5,7,5,2,4,6,5,6,5,5,10,5,7,7,5,6,5,8,5,6,6,6,7,5,5,6,6,8,6,9,8,8,6,5,8,8,8,6,9,7,8,8,8,8,9,8,8,6,5,7,8,7,9,9,10,9,2,5,9,9,6,9,6,5,8,10,9,8,7,9,9,10,10,10,10,8,10,10,9,7,10,10,10,5,10,10,3,2,6,4,4,3,6,2,3,3,3,3,3,4,5,5,6,4,6,6,5,5,5,3,9,5,4,6,4,6,3,5,5,4,5,7,3,4,3,4,1,2,3,6,3,2,2,4,2,5,4,0,3,1,1,5,1,4,1,2,2,2,1,2,1,6,1,2,5,1,2,1,4,2,0,2,6,2,1,1,0,0,0,0,0,0,3,1,0,0,5,0,0,0,0,0)

# should just be a different sort of the exact data in M1_ins_blue_counts & M1_outs_blue_counts
M1_ins_diff_sort = (5,5,7,7,7,7,5,5,7,7,3,3,5,5,3,7,3,3,5,5,3,3,3,3,3,5,5,7,5,7,3,3,5,5,5,7,5,3,7,5,5,5,7,7,7,5,5,5,3,7,5,5,5,5,5,7,3,6,4,6,6,6,4,4,4,6,6,6,4,6,4,6,4,8,8,8,8,8,6,6,8,8,6,6,4,4,2,2,2,2,8,2,6,2,2,8,8,8,9,9,9,8,2,2,6,6,4,9,2,4,5,1,9,4,8,1,1,9,1,1,9,9,5,1,9,9,5,1,9,2,2,9,1,1,1,4,1,5,3,4,1,2,9,1,4,2,1,5,2,5,8,9,4,2,1,1,9,8,8,9,10,10,10,0,0,10,10,10,0,10,0,10,0,10,10,0,0,0,0,0,10,0,10,0,10,10,10,0,0,0,0,10) 
M1_outs_diff_sort = (5,4,5,8,7,5,5,5,6,7,3,2,6,5,4,7,4,3,5,6,2,3,3,3,3,2,4,6,5,6,3,4,5,5,6,5,5,4,10,6,5,6,7,7,5,5,5,5,3,6,9,5,4,6,5,8,4,5,6,6,6,6,3,5,5,7,5,5,4,6,5,6,7,8,6,9,8,8,6,5,8,8,8,6,3,4,3,4,1,2,9,3,7,6,3,8,8,8,8,9,8,8,2,2,6,5,4,7,2,5,4,0,8,3,7,1,1,9,5,1,9,10,4,1,9,2,5,2,9,2,2,9,1,2,1,6,1,6,2,5,1,2,9,1,4,2,0,6,2,5,8,10,6,2,1,1,9,8,7,9,9,10,10,0,0,10,10,8,0,10,0,10,0,9,7,0,3,1,0,0,10,5,10,0,10,5,10,0,0,0,0,10)

# 1W pilot
# from the evernote document "SingleWords by Condition"
W1_c2_ins = (2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2)
W1_c2_outs = (2,3,3,3,2,2,0,1,2,2,4,2,1,3,1,1,1,0,2,2,2,2,3,2,2,2,2,2,5)
W1_c5_ins = (5,5,5,5,5,5,5,5,5,5,5,5,5,5,5)
W1_c5_outs = (0,5,10,6,5,5,5,5,5,7,4,6,6,5,5)

M1_c2_ins = (2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2)
M1_c2_outs = (2,4,1,2,2,2,2,3,4,1,2,1,3,6,3,2,2,2,2,2,2,2,3,2,2,2,2,2,2,2,2,3)  # erroneaously said M1_c2_ins - woulda screwed up analyses previous to April 1, 2013
M1_c5_ins = (5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5)
M1_c5_outs = (5,6,5,5,6,5,5,6,8,6,5,5,5,6,5,6,5,6,5,5,5,9,5,4,6,5,4,4,5,4,4,5)

M6_c0_outs = (0, 4, 0, 5, 0, 0, 0, 0, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 8, 7, 4, 0, 2, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 2, 0, 0, 0, 1, 0, 2, 0, 1, 2, 0, 0, 5, 1, 0, 0, 3, 0, 0, 4, 0, 1, 0, 3, 0, 3, 7, 0)
M6_c1_outs = (0, 5, 0, 6, 1, 10, 0, 2, 4, 4, 0, 10, 0, 0, 1, 0, 0, 8, 1, 0, 1, 4, 7, 5, 0, 3, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 1, 0, 0, 0, 2, 7, 5, 0, 8, 8, 1, 0, 7, 10, 0, 2, 5, 0, 0, 5, 0, 1, 0, 4, 0, 3, 5, 0)
M6_c2_outs = (1, 4, 0, 7, 0, 0, 10, 1, 6, 4, 0, 0, 2, 0, 2, 0, 0, 2, 4, 0, 4, 2, 5, 2, 10, 3, 0, 2, 2, 0, 4, 0, 3, 0, 2, 1, 2, 0, 0, 1, 0, 5, 5, 0, 7, 4, 0, 0, 6, 0, 0, 4, 6, 1, 0, 2, 2, 0, 6, 3, 10, 5, 1, 4)
M6_c3_outs = (3, 1, 0, 6, 0, 0, 1, 2, 5, 3, 0, 2, 2, 9, 6, 8, 0, 1, 5, 3, 2, 1, 6, 6, 0, 4, 1, 3, 2, 5, 4, 0, 2, 3, 2, 3, 1, 0, 0, 1, 2, 5, 2, 10, 4, 4, 0, 3, 5, 0, 3, 0, 4, 3, 0, 2, 2, 2, 0, 5, 0, 5, 3, 3)
M6_c4_outs = (1, 6, 10, 6, 7, 0, 1, 1, 3, 4, 9, 0, 0, 2, 1, 10, 7, 1, 5, 0, 4, 8, 7, 4, 7, 3, 5, 1, 4, 0, 5, 10, 8, 3, 4, 2, 1, 0, 10, 10, 2, 2, 7, 9, 4, 7, 8, 10, 6, 10, 10, 1, 4, 0, 0, 3, 3, 2, 1, 5, 0, 4, 4, 3)
M6_c5_outs = (9, 7, 10, 5, 5, 0, 6, 2, 4, 6, 10, 1, 2, 1, 3, 6, 6, 3, 5, 10, 4, 5, 6, 5, 0, 5, 3, 1, 8, 2, 2, 5, 4, 5, 7, 8, 4, 10, 0, 10, 4, 7, 4, 10, 5, 6, 8, 10, 3, 0, 4, 5, 5, 9, 10, 6, 8, 0, 0, 7, 0, 6, 5, 5)



################################################################################
# some drift stuff













